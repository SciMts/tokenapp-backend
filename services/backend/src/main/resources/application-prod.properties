server.port=8081

spring.profiles.active=prod
spring.main.banner-mode=off

# Database set-up
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://dbpostgres.modum.intern/tokensale
# Database schema generation method:
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
spring.jpa.generate-ddl=false
# For production, please, either set env variables (DATASOURCE_USERNAME and DATASOURCE_PASSWORD)
# or, set the 'spring.datasource.username' and 'spring.datasource.password' properties, as follows:
# ./gradlew bootRunProd -Pspring.datasource.username=XXXXX -Pspring.datasource.password=YYYYY
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}

spring.application.name=tokenapp-backend
logging.level.io.modum.tokenapp.backend=ERROR
logging.level.io.modum.tokenapp.backend.controller=INFO
logging.level.org.thymeleaf=ERROR

management.security.enabled=true
management.context-path=/management

modum.tokenapp.backendUrl=https://token.modum.io/api/

modum.tokenapp.frontendUrl=https://token.modum.io
modum.tokenapp.frontendWalletPath=/confirm/

modum.tokenapp.bitcoin.network=mainnet

modum.tokenapp.email.confirmationEmailSubject=Eureka: Token Sale
modum.tokenapp.email.summaryEmailSubject=Eureka: Summary of your Investment Details

modum.tokenapp.email.queue-file-path=email-file-queue.bin
# Interval of 10 seconds to poll emails
modum.tokenapp.email.send-email-interval=10000
# Max amount of times that an email can be requeued before being discarded.
# E.g., if an error happens once, the email will be requeued 'n' times
modum.tokenapp.email.max-times-requeued=3
modum.tokenapp.email.enabled=true
modum.tokenapp.email.host=email-smtp.us-east-1.amazonaws.com
modum.tokenapp.email.protocol=smtp
modum.tokenapp.email.port=25
modum.tokenapp.email.auth=true
modum.tokenapp.email.starttls=true
modum.tokenapp.email.debug=false
modum.tokenapp.email.trust=*
modum.tokenapp.email.username=${EMAIL_USERNAME}
modum.tokenapp.email.password=${EMAIL_PASSWORD}
modum.tokenapp.email.admin=eureka@sciencematters.io
# when option 'enableBccToConfirmationEmail' is set to true, every time someone registers
# to the ICO, then the admin email will be included in bcc
modum.tokenapp.email.enableBccToConfirmationEmail=true
# when option 'enableBccToSummaryEmail' is set to true, every time someone go until the last screen,
# then the admin email will be included in bcc
modum.tokenapp.email.enableBccToSummaryEmail=true
modum.tokenapp.email.sendfrom=eureka@sciencematters.io

